{"remainingRequest":"/Users/khushbookumari/Desktop/e-commerceApp/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/khushbookumari/Desktop/e-commerceApp/src/views/Category/EditCategory.vue?vue&type=style&index=0&id=b4dbff22&scoped=true&lang=css","dependencies":[{"path":"/Users/khushbookumari/Desktop/e-commerceApp/src/views/Category/EditCategory.vue","mtime":1631518566129},{"path":"/Users/khushbookumari/Desktop/e-commerceApp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/khushbookumari/Desktop/e-commerceApp/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1628298225000},{"path":"/Users/khushbookumari/Desktop/e-commerceApp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/khushbookumari/Desktop/e-commerceApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/khushbookumari/Desktop/e-commerceApp/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cmg0IHsKICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7CiAgY29sb3I6ICM0ODQ4NDg7CiAgZm9udC13ZWlnaHQ6IDcwMDsKfQo="},{"version":3,"sources":["/Users/khushbookumari/Desktop/e-commerceApp/src/views/Category/EditCategory.vue"],"names":[],"mappings":";AA2FA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB","file":"/Users/khushbookumari/Desktop/e-commerceApp/src/views/Category/EditCategory.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12 text-center\">\n        <h4 class=\"pt-3\">Edit Category</h4>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-3\"></div>\n      <div class=\"col-md-6 px-5 px-md-0\">\n        <form>\n          <div class=\"form-group\">\n            <label>Category Name</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"categoryName\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"description\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>ImageURL</label>\n            <input type=\"url\" class=\"form-control\" v-model=\"imageUrl\" required>\n          </div>\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"editCategory\">Submit</button>\n        </form>\n      </div>\n      <div class=\"col-3\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      id : null,\n      categoryName : null,\n      description : null,\n      imageUrl : null,\n      categoryIndex : null\n    }\n  },\n  props : [\"baseURL\", \"categories\"],\n  methods : {\n    async editCategory() {\n      const newCategory = {\n        id : this.id,\n        categoryName : this.categoryName,\n        description : this.description,\n        imageUrl : this.imageUrl,\n        products : null\n      }\n\n      await axios({\n        method: 'post',\n        url: this.baseURL+\"category/update/\"+this.id,\n        data : JSON.stringify(newCategory),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(res => {\n          //sending the event to parent to handle\n        this.$emit(\"fetchData\");\n        this.$router.push({name:'AdminCategory'});\n        swal({\n          text: \"Category Updated Successfully!\",\n          icon: \"success\",\n          closeOnClickOutside: false,\n        });\n      })\n      .catch(err => console.log(err));\n    }\n  },\n  mounted() {\n    if (!localStorage.getItem('token')) {\n      this.$router.push({name : 'Signin'});\n      return;\n    }\n    this.id = this.$route.params.id;\n    this.categoryIndex = this.categories.findIndex(category => category.id == this.id);\n    //input fields\n    this.categoryName = this.categories[this.categoryIndex].categoryName;\n    this.description = this.categories[this.categoryIndex].description;\n    this.imageUrl = this.categories[this.categoryIndex].imageUrl;\n  }\n}\n</script>\n\n<style scoped>\nh4 {\n  font-family: 'Roboto', sans-serif;\n  color: #484848;\n  font-weight: 700;\n}\n</style>\n"]}]}